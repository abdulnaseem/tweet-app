{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naseem\\\\node\\\\tweet-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //const [backendData, setBackendData] = useState([{}])\n  const [username, setUsername] = useState({});\n  const [password, setPassword] = useState({});\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  Axios.defaults.withCredentials = true;\n\n  const login = () => {\n    Axios.post('/api/v1.0/tweets/login', {\n      username: username,\n      password: password\n    }).then(response => {});\n  };\n\n  useEffect(() => {\n    fetch('/api/v1.0/tweets/users/all').then(response => response.json()).then(data => {\n      setBackendData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u29/Molgt84qMR/P0ub2Pl4BYFM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Axios","App","username","setUsername","password","setPassword","loginStatus","setLoginStatus","defaults","withCredentials","login","post","then","response","fetch","json","data","setBackendData"],"sources":["C:/Users/Naseem/node/tweet-app/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Axios from 'axios'\n\nconst App = () => {\n\n  //const [backendData, setBackendData] = useState([{}])\n\n  const [username, setUsername] = useState({})\n  const [password, setPassword] = useState({})\n\n  const [loginStatus, setLoginStatus] = useState(\"\")\n\n  Axios.defaults.withCredentials = true\n\n  const login = () => {\n    Axios.post('/api/v1.0/tweets/login', {\n      username: username,\n      password: password\n    }).then((response) => {\n      \n    })\n  }\n\n  useEffect(() => {\n    fetch('/api/v1.0/tweets/users/all').then(\n      response => response.json()\n    ).then(\n      data => {\n        setBackendData(data)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n \n    </div>\n  )\n\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB;EAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EAEAE,KAAK,CAACQ,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;EAEA,MAAMC,KAAK,GAAG,MAAM;IAClBV,KAAK,CAACW,IAAN,CAAW,wBAAX,EAAqC;MACnCT,QAAQ,EAAEA,QADyB;MAEnCE,QAAQ,EAAEA;IAFyB,CAArC,EAGGQ,IAHH,CAGSC,QAAD,IAAc,CAErB,CALD;EAMD,CAPD;;EASAd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,4BAAD,CAAL,CAAoCF,IAApC,CACEC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADd,EAEEH,IAFF,CAGEI,IAAI,IAAI;MACNC,cAAc,CAACD,IAAD,CAAd;IACD,CALH;EAOD,CARQ,EAQN,EARM,CAAT;EAUA,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CApCD;;GAAMf,G;;KAAAA,G;AAsCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}